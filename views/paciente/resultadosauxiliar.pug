head 
  link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous")
  link(href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet")  
  link(href="https://cdn.datatables.net/buttons/2.3.0/css/buttons.dataTables.min.css" rel="stylesheet")     
  title   Doctor #{orde.medico}
  link(rel='stylesheet', href='/stylesheets/navbar.css')
body
  img.imagen-centrada(src='/img/nombreLab.png', alt='Titulo') 
  
  .container
    include navBar.pug
    h1 Doctor #{ordenes.medico}
    h1 Doctor #{orde.medico}
    h5 Diagnostico: #{orde.diagnostico}
    .container 
      table#example.display(style="width:100%")
       
        thead
          tr
            th Nombre
            th Valor Ref Minimo 
            th Valor Ref Maximo 
            th Resultado
           
        
        each ex in exam
           
            each determinacion in ex.Examen.ExamenDeterminacions
              
               if determinacion.Determinacion.dataValues.ValorReferencia.length==0
               
                  tr
                   td= determinacion.Determinacion.dataValues.nombre
                   td="no se encuentra"
                   td= "no se encuentra"
                   if determinacion.Determinacion.dataValues.Resultados.length > 0
                     td= determinacion.Determinacion.dataValues.Resultados[0].valor + " " + determinacion.Determinacion.dataValues.unidadMedida
                   else
                     td 0
                      
               else
                 each valorref in determinacion.Determinacion.dataValues.ValorReferencia
                  each resul in determinacion.Determinacion.dataValues.Resultados
                   tr
                    td= determinacion.Determinacion.dataValues.nombre
                    td= valorref.valorMaximo
                    td= valorref.valorMinimo
                    td= resul.valor+" "+determinacion.Determinacion.dataValues.unidadMedida
                  
        
      script(src="https://code.jquery.com/jquery-3.7.0.js") 
      script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous")
      script(src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js")   
      script(src="https://cdn.datatables.net/buttons/2.3.0/js/dataTables.buttons.min.js")    
      script(src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js")
      script(src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js")
      script(src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js")
      script(src="https://cdn.datatables.net/buttons/2.3.0/js/buttons.html5.min.js")
      script(src="https://cdn.datatables.net/buttons/2.3.0/js/buttons.print.min.js")
      script.
      
        $(document).ready(function() {
         
         
          $('#example').DataTable( {
            dom: 'Bfrtip',
            buttons: [
              'pdf', 'print' // Solo se incluyen los botones de descargar PDF e imprimir
            ]
          } );
        });
       
//---------------------------------------------------------------------------------------------------------------------------------------------
       router.get('/imprimir',async(req,res)=>{
    
    const parametroRecibido=req.query.ordenId;

    //const ordenes = await getOrdenPacientePorId( parametroRecibido);
        const orde = await getOrdenPacientePorIdes( parametroRecibido);
        const ordenes=[];
        const result=[];
        let i =0;
        const exam=[];
   // const result=await listaDeResultado(parametroRecibido);

   orde.ExamenOrdens.forEach(examen=>{
exam.push(examen);
  
});

orde.Resultados.forEach(resultado => {



   const determinacion = resultado.Determinacion;
   result.push(resultado);
   ordenes.push(determinacion);
   let valorref="";
   if(ordenes[i].dataValues.ValorReferencia[i]!=null)
   {console.log("hola");
    valorref=ordenes[i].dataValues.ValorReferencia[i].valorMaximo;
    i++;
   }
   else{
   // ordenes[i].dataValues.ValorReferencia[i].valorMaximo=0;
   //valorref.push("0");
   i++;
   }

    //const valorReferencia = determinacion.dataValues.ValorReferencia;
    // Aquí puedes acceder a los atributos de la determinación
    //console.log(valorReferencia);

   // console.log(determinacion.dataValues.nombre);
    //console.log(determinacion);
});


    //console.log(exam[0].ExamenDeterminacions[0],"cabeza");
    console.log(exam[0].Examen.ExamenDeterminacions[0].dataValues);

    
    res.render('paciente/resultados',{result,ordenes,orde,exam});
})

