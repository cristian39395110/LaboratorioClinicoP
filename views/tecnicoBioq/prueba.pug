head
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous")
    link(href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet")
    link(href="https://cdn.datatables.net/buttons/2.3.0/css/buttons.dataTables.min.css" rel="stylesheet")
    title Doctor #{orde.medico}
    link(rel='stylesheet' href='/stylesheets/navbar.css')

body
    img.imagen-centrada(src='/img/nombreLab.png' alt='Titulo')

    .container
        .d-none
            include navBar.pug
        include navBar.pug 
        h3 Doctor #{orde.medico}   
        h3 Orden N° #{orde.id} 
        h3 Diagnostico: #{orde.diagnostico}

        .container
            - const arrayResultados=[];
            - const arrayDeterminaciones=[];
            - const arrayJuntos=[]; 
            form(id="formulario" action="/vistaTecBioq/ingresarResultados" method="post")
                input(type="hidden" name="ordenId" value=orde.id)
                each examen in exam
                    h4= examen.Examen.nombre
                    table.display(style="width:100%")
                        thead
                            tr
                                th Nombre
                                th Valor Ref Minimo 
                                th Valor Ref Maximo 
                                th Resultado
                        tbody
                            each determinacion in examen.Examen.ExamenDeterminacions
                                tr
                                    td= determinacion.Determinacion.dataValues.nombre
                                    - const valorReferencia = determinacion.Determinacion.dataValues.ValorReferencia[0]
                                    - const resultado = determinacion.Determinacion.dataValues.Resultados[0]
                                    td= valorReferencia ? valorReferencia.valorMaximo : "No se encuentra"
                                    td= valorReferencia ? valorReferencia.valorMinimo : "No se encuentra"
                                    td
                                        input(type="text" class="resultado-input" name= `resultados` placeholder="Ingrese resultado", value=resultado ? resultado.valor : "")
                                        input(type="hidden" name="determinacionId" value=determinacion.Determinacion.id)
                                        input(type="hidden" name="minDet" value=determinacion.Determinacion.valorMin)
                                        input(type="hidden" name="maxDet" value=determinacion.Determinacion.valorMax)
                                        script.
                                            const resultadoInput = this.querySelector('.resultado-input');
                                            const minDet = parseFloat("#{determinacion.Determinacion.valorMin}");
                                            const maxDet = parseFloat("#{determinacion.Determinacion.valorMax}");

                                            console.log('resultadoInput:', resultadoInput);
                                            console.log('minDet:', minDet);
                                            console.log('maxDet:', maxDet);

                                            resultadoInput.addEventListener('change', function() {
                                                console.log('Change event triggered');
                                                const valor = parseFloat(resultadoInput.value);
                                                console.log('valor:', valor);
                                                if (isNaN(valor) || valor < minDet || valor > maxDet) {
                                                    resultadoInput.style.color = 'red'; // Cambiar el color del texto a rojo
                                                    alert('El valor ingresado está fuera de los límites.');
                                                    resultadoInput.focus();
                                                } else {
                                                    resultadoInput.style.color = ''; // Restaurar el color del texto
                                                }
                                            });
                input(type="submit" value="Guardar Resultados" class="btn btn-primary")
               
                
             
                if modal
                .modal.fade(id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true")
                    .modal-dialog
                    .modal-content
                        .modal-header
                        h5.modal-title#exampleModalLabel Resultados Cargados
                        button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") ×
                        .modal-body
                    
                        .modal-footer
                        button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Close
    script(src="https://code.jquery.com/jquery-3.7.0.js")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous")
    script(src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js")
    script(src="https://cdn.datatables.net/buttons/2.3.0/js/dataTables.buttons.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js")
    script(src="https://cdn.datatables.net/buttons/2.3.0/js/buttons.html5.min.js")
    script(src="https://cdn.datatables.net/buttons/2.3.0/js/buttons.print.min.js")
    script.
        $(document).ready(function() {
            $('table.display').DataTable({
                searching: false,
                paging: false
            });

            $('.resultado-input').on('change', function() {
                var valor = parseFloat($(this).val());
                var valorMinimo = parseFloat($(this).closest('tr').find('td:nth-child(3)').text());
                var valorMaximo = parseFloat($(this).closest('tr').find('td:nth-child(2)').text());

                if (isNaN(valor) || valor < valorMinimo || valor > valorMaximo) {
                    $(this).css('color', 'red'); // Cambiar el color del texto a rojo
                    alert('El valor ingresado está fuera de los límites.');
                    $(this).focus();
                } else {
                    $(this).css('color', ''); // Restaurar el color del texto
                }
            });

            if(#{modal}) {
                $('#exampleModal').modal('show');
            }
        });

        